// Code generated by entc, DO NOT EDIT.

package server

const (
	// Label holds the string label denoting the server type in the database.
	Label = "server"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldHn holds the string denoting the hn field in the database.
	FieldHn = "hn"
	// FieldPc holds the string denoting the pc field in the database.
	FieldPc = "pc"
	// FieldPm holds the string denoting the pm field in the database.
	FieldPm = "pm"
	// FieldGm holds the string denoting the gm field in the database.
	FieldGm = "gm"
	// FieldLa holds the string denoting the la field in the database.
	FieldLa = "la"
	// FieldPa holds the string denoting the pa field in the database.
	FieldPa = "pa"
	// FieldVn holds the string denoting the vn field in the database.
	FieldVn = "vn"
	// FieldDomain holds the string denoting the domain field in the database.
	FieldDomain = "domain"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldBanner holds the string denoting the banner field in the database.
	FieldBanner = "banner"
	// FieldUserId holds the string denoting the userid field in the database.
	FieldUserId = "user_id"
	// FieldActive holds the string denoting the active field in the database.
	FieldActive = "active"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deletedat field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeRu holds the string denoting the ru edge name in mutations.
	EdgeRu = "ru"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "User"
	// Table holds the table name of the server in the database.
	Table = "servers"
	// RuTable is the table that holds the ru relation/edge.
	RuTable = "rules"
	// RuInverseTable is the table name for the Rule entity.
	// It exists in this package in order to avoid circular dependency with the "rule" package.
	RuInverseTable = "rules"
	// RuColumn is the table column denoting the ru relation/edge.
	RuColumn = "server_ru"
	// UserTable is the table that holds the User relation/edge.
	UserTable = "users"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the User relation/edge.
	UserColumn = "server_user"
)

// Columns holds all SQL columns for server fields.
var Columns = []string{
	FieldID,
	FieldIP,
	FieldHn,
	FieldPc,
	FieldPm,
	FieldGm,
	FieldLa,
	FieldPa,
	FieldVn,
	FieldDomain,
	FieldDescription,
	FieldBanner,
	FieldUserId,
	FieldActive,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "servers"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"rule_server",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
