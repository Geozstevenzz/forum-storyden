/**
 * Generated by orval v6.9.6 🍺
 * Do not edit manually.
 * storyden
 * OpenAPI spec version: 1
 */
import useSwr from "swr";
import type { SWRConfiguration, Key } from "swr";
import type {
  AccountsGetSuccessResponse,
  UnauthorisedResponse,
  NotFoundResponse,
  InternalServerErrorResponse,
} from "./schemas";
import { fetcher } from "../client";

/**
 * @summary Get the information for the currently authenticated account.
 */
export const accountsGet = () => {
  return fetcher<AccountsGetSuccessResponse>({
    url: `/v1/accounts`,
    method: "get",
  });
};

export const getAccountsGetKey = () => [`/v1/accounts`];

export type AccountsGetQueryResult = NonNullable<
  Awaited<ReturnType<typeof accountsGet>>
>;
export type AccountsGetQueryError =
  | UnauthorisedResponse
  | NotFoundResponse
  | InternalServerErrorResponse;

export const useAccountsGet = <
  TError = UnauthorisedResponse | NotFoundResponse | InternalServerErrorResponse
>(options?: {
  swr?: SWRConfiguration<Awaited<ReturnType<typeof accountsGet>>, TError> & {
    swrKey?: Key;
    enabled?: boolean;
  };
}) => {
  const { swr: swrOptions } = options ?? {};

  const isEnabled = swrOptions?.enabled !== false;
  const swrKey =
    swrOptions?.swrKey ?? (() => (isEnabled ? getAccountsGetKey() : null));
  const swrFn = () => accountsGet();

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    swrOptions
  );

  return {
    swrKey,
    ...query,
  };
};
