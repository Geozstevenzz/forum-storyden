// Code generated by entc, DO NOT EDIT.

package rule

const (
	// Label holds the string label denoting the rule type in the database.
	Label = "rule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldServerId holds the string denoting the serverid field in the database.
	FieldServerId = "server_id"
	// EdgeServer holds the string denoting the server edge name in mutations.
	EdgeServer = "Server"
	// Table holds the table name of the rule in the database.
	Table = "rules"
	// ServerTable is the table that holds the Server relation/edge.
	ServerTable = "servers"
	// ServerInverseTable is the table name for the Server entity.
	// It exists in this package in order to avoid circular dependency with the "server" package.
	ServerInverseTable = "servers"
	// ServerColumn is the table column denoting the Server relation/edge.
	ServerColumn = "rule_server"
)

// Columns holds all SQL columns for rule fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldValue,
	FieldServerId,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "rules"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"server_ru",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
