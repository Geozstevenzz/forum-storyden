definitions:
  categories.PatchBody:
    properties:
      admin:
        type: boolean
      colour:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      postCount:
        type: integer
      recent:
        items:
          $ref: '#/definitions/category.PostMeta'
        type: array
      sort:
        type: integer
    type: object
  category.Category:
    properties:
      admin:
        type: boolean
      colour:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      postCount:
        type: integer
      recent:
        items:
          $ref: '#/definitions/category.PostMeta'
        type: array
      sort:
        type: integer
    type: object
  category.PostMeta:
    properties:
      author:
        type: string
      postId:
        type: string
      short:
        type: string
      slug:
        type: string
      title:
        type: string
    type: object
  notification.Notification:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      link:
        type: string
      read:
        type: boolean
      subscription:
        $ref: '#/definitions/notification.Subscription'
      title:
        type: string
    type: object
  notification.Subscription:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      refersTo:
        type: string
      refersType:
        type: string
      updatedAt:
        type: string
    type: object
  notifications.PatchBody:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      link:
        type: string
      read:
        type: boolean
      subscription:
        $ref: '#/definitions/notification.Subscription'
      title:
        type: string
    type: object
  post.Author:
    properties:
      admin:
        type: boolean
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  post.Post:
    properties:
      author:
        $ref: '#/definitions/post.Author'
      body:
        type: string
      category:
        $ref: '#/definitions/category.Category'
      createdAt:
        type: string
      deletedAt:
        type: string
      first:
        type: boolean
      id:
        type: string
      pinned:
        type: boolean
      posts:
        type: integer
      reacts:
        items:
          $ref: '#/definitions/react.React'
        type: array
      replyTo:
        $ref: '#/definitions/category.PostMeta'
      rootPostId:
        type: string
      short:
        type: string
      slug:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  posts.PatchBody:
    properties:
      body:
        type: string
      title:
        type: string
    type: object
  posts.PostBody:
    properties:
      body:
        type: string
      replyTo:
        type: string
    type: object
  react.React:
    properties:
      emoji:
        type: string
      id:
        type: string
      post:
        type: string
      user:
        type: string
    type: object
  reacts.PostBody:
    properties:
      emoji:
        description: A string containing a single emoji character
        type: string
      postId:
        description: ID of the post to react to
        type: string
    type: object
  subscriptions.DeleteResponse:
    properties:
      deleted:
        type: integer
    type: object
  subscriptions.PostBody:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      refersTo:
        type: string
      refersType:
        type: string
      updatedAt:
        type: string
    type: object
  tag.Tag:
    properties:
      id:
        type: string
      name:
        type: string
      posts:
        type: integer
    type: object
  threads.DeleteResponse:
    properties:
      count:
        type: integer
    type: object
  threads.PatchBody:
    properties:
      category:
        $ref: '#/definitions/category.Category'
      pinned:
        type: boolean
      title:
        type: string
    type: object
  threads.PostBody:
    properties:
      body:
        type: string
      category:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  user.User:
    properties:
      admin:
        type: boolean
      bio:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      discord:
        type: string
      email:
        type: string
      github:
        type: string
      id:
        type: string
      name:
        type: string
      postCount:
        type: integer
      threadCount:
        type: integer
      updatedAt:
        type: string
    type: object
  users.BanstatusBody:
    properties:
      banned:
        type: boolean
    type: object
  users.PatchBody:
    properties:
      status:
        type: boolean
    type: object
  web.Error:
    properties:
      error:
        description: internal error string
        type: string
      message:
        description: human readable message
        type: string
      suggested:
        description: suggestion for fix
        type: string
    type: object
info:
  contact: {}
paths:
  /categories:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Get all categories
      tags:
      - categories
    patch:
      consumes:
      - application/json
      parameters:
      - description: Updated categories
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/category.Category'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Bulk update categories
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: New category to move posts to
        in: body
        name: moveTo
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Delete a category
      tags:
      - categories
    patch:
      consumes:
      - application/json
      parameters:
      - description: Updated category
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/categories.PatchBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Update a category
      tags:
      - categories
  /posts/{id}:
    delete:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.Post'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Soft-delete a single post
      tags:
      - posts
    get:
      parameters:
      - description: Root post slug
        in: path
        name: slug
        required: true
        type: string
      - in: query
        name: max
        type: integer
      - in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/post.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Get a post and all its replies
      tags:
      - posts
    patch:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated post contents
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/posts.PatchBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Update a post
      tags:
      - posts
    post:
      parameters:
      - description: Thread ID to post under
        in: path
        name: thread_id
        required: true
        type: string
      - description: Post contents and optional reply-to ID
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/posts.PostBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Post a reply to a thread
      tags:
      - posts
  /reacts/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: React ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/react.React'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Delete a reaction
      tags:
      - reacts
    post:
      consumes:
      - application/json
      parameters:
      - description: Post ID and emoji to react with
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/reacts.PostBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/react.React'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: React to a post
      tags:
      - reacts
  /subscriptions:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Subscription'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Get all subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      parameters:
      - description: Subscription data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/subscriptions.PostBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Create a subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscriptions.DeleteResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Delete subscription
      tags:
      - subscriptions
  /subscriptions/notifications:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: after
        type: string
      - in: query
        name: read
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/notification.Notification'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Get all notifications
      tags:
      - notifications
  /subscriptions/notifications/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Notification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Delete notification
      tags:
      - notifications
    patch:
      consumes:
      - application/json
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      - description: Notification object with read state set
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/notifications.PatchBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Notification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Update a notification's read state
      tags:
      - notifications
  /tags:
    get:
      parameters:
      - in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tag.Tag'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Get all tags
      tags:
      - categories
  /threads:
    get:
      parameters:
      - in: query
        name: before
        type: string
      - in: query
        name: category
        type: string
      - in: query
        name: max
        type: integer
      - in: query
        name: offset
        type: integer
      - in: query
        name: posts
        type: boolean
      - in: query
        name: query
        type: string
      - in: query
        name: sort
        type: string
      - in: query
        items:
          type: string
        name: tags
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/post.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Get, search and filter threads
      tags:
      - threads
    post:
      parameters:
      - description: Post contents with title etc.
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/threads.PostBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Create a new thread by creating a root post under a category.
      tags:
      - threads
  /threads/{id}:
    delete:
      parameters:
      - description: Root post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/threads.DeleteResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Soft-delete all posts in a thread
      tags:
      - threads
    patch:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated post contents
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/threads.PatchBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Update a thread's metadata (title, category, pinned, etc...) not the
        content
      tags:
      - threads
  /users/{id}/adminstatus:
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Operation parameters
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.PatchBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Set a user's admin status
      tags:
      - users
  /users/{id}/banstatus:
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Ban status payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.BanstatusBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Error'
      summary: Ban a user
      tags:
      - users
swagger: "2.0"
