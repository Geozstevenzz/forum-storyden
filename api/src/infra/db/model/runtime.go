// Code generated by entc, DO NOT EDIT.

package model

import (
	"time"

	"github.com/Southclaws/storyden/api/src/infra/db/model/authentication"
	"github.com/Southclaws/storyden/api/src/infra/db/model/category"
	"github.com/Southclaws/storyden/api/src/infra/db/model/notification"
	"github.com/Southclaws/storyden/api/src/infra/db/model/post"
	"github.com/Southclaws/storyden/api/src/infra/db/model/react"
	"github.com/Southclaws/storyden/api/src/infra/db/model/subscription"
	"github.com/Southclaws/storyden/api/src/infra/db/model/tag"
	"github.com/Southclaws/storyden/api/src/infra/db/model/user"
	"github.com/Southclaws/storyden/api/src/infra/db/schema"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authenticationMixin := schema.Authentication{}.Mixin()
	authenticationMixinFields0 := authenticationMixin[0].Fields()
	_ = authenticationMixinFields0
	authenticationFields := schema.Authentication{}.Fields()
	_ = authenticationFields
	// authenticationDescCreateTime is the schema descriptor for create_time field.
	authenticationDescCreateTime := authenticationMixinFields0[0].Descriptor()
	// authentication.DefaultCreateTime holds the default value on creation for the create_time field.
	authentication.DefaultCreateTime = authenticationDescCreateTime.Default.(func() time.Time)
	// authenticationDescService is the schema descriptor for service field.
	authenticationDescService := authenticationFields[0].Descriptor()
	// authentication.ServiceValidator is a validator for the "service" field. It is called by the builders before save.
	authentication.ServiceValidator = authenticationDescService.Validators[0].(func(string) error)
	// authenticationDescToken is the schema descriptor for token field.
	authenticationDescToken := authenticationFields[2].Descriptor()
	// authentication.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	authentication.TokenValidator = authenticationDescToken.Validators[0].(func(string) error)
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescDescription is the schema descriptor for description field.
	categoryDescDescription := categoryFields[2].Descriptor()
	// category.DefaultDescription holds the default value on creation for the description field.
	category.DefaultDescription = categoryDescDescription.Default.(string)
	// categoryDescColour is the schema descriptor for colour field.
	categoryDescColour := categoryFields[3].Descriptor()
	// category.DefaultColour holds the default value on creation for the colour field.
	category.DefaultColour = categoryDescColour.Default.(string)
	// categoryDescSort is the schema descriptor for sort field.
	categoryDescSort := categoryFields[4].Descriptor()
	// category.DefaultSort holds the default value on creation for the sort field.
	category.DefaultSort = categoryDescSort.Default.(int)
	// categoryDescAdmin is the schema descriptor for admin field.
	categoryDescAdmin := categoryFields[5].Descriptor()
	// category.DefaultAdmin holds the default value on creation for the admin field.
	category.DefaultAdmin = categoryDescAdmin.Default.(bool)
	// categoryDescID is the schema descriptor for id field.
	categoryDescID := categoryFields[0].Descriptor()
	// category.DefaultID holds the default value on creation for the id field.
	category.DefaultID = categoryDescID.Default.(func() uuid.UUID)
	notificationFields := schema.Notification{}.Fields()
	_ = notificationFields
	// notificationDescCreateTime is the schema descriptor for create_time field.
	notificationDescCreateTime := notificationFields[5].Descriptor()
	// notification.DefaultCreateTime holds the default value on creation for the create_time field.
	notification.DefaultCreateTime = notificationDescCreateTime.Default.(func() time.Time)
	// notificationDescID is the schema descriptor for id field.
	notificationDescID := notificationFields[0].Descriptor()
	// notification.DefaultID holds the default value on creation for the id field.
	notification.DefaultID = notificationDescID.Default.(func() uuid.UUID)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescPinned is the schema descriptor for pinned field.
	postDescPinned := postFields[4].Descriptor()
	// post.DefaultPinned holds the default value on creation for the pinned field.
	post.DefaultPinned = postDescPinned.Default.(bool)
	// postDescCreatedAt is the schema descriptor for createdAt field.
	postDescCreatedAt := postFields[9].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the createdAt field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for updatedAt field.
	postDescUpdatedAt := postFields[10].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(func() time.Time)
	// postDescID is the schema descriptor for id field.
	postDescID := postFields[0].Descriptor()
	// post.DefaultID holds the default value on creation for the id field.
	post.DefaultID = postDescID.Default.(func() uuid.UUID)
	reactFields := schema.React{}.Fields()
	_ = reactFields
	// reactDescCreatedAt is the schema descriptor for createdAt field.
	reactDescCreatedAt := reactFields[2].Descriptor()
	// react.DefaultCreatedAt holds the default value on creation for the createdAt field.
	react.DefaultCreatedAt = reactDescCreatedAt.Default.(func() time.Time)
	// reactDescID is the schema descriptor for id field.
	reactDescID := reactFields[0].Descriptor()
	// react.DefaultID holds the default value on creation for the id field.
	react.DefaultID = reactDescID.Default.(func() uuid.UUID)
	subscriptionFields := schema.Subscription{}.Fields()
	_ = subscriptionFields
	// subscriptionDescRefersType is the schema descriptor for refers_type field.
	subscriptionDescRefersType := subscriptionFields[1].Descriptor()
	// subscription.RefersTypeValidator is a validator for the "refers_type" field. It is called by the builders before save.
	subscription.RefersTypeValidator = subscriptionDescRefersType.Validators[0].(func(string) error)
	// subscriptionDescRefersTo is the schema descriptor for refers_to field.
	subscriptionDescRefersTo := subscriptionFields[2].Descriptor()
	// subscription.RefersToValidator is a validator for the "refers_to" field. It is called by the builders before save.
	subscription.RefersToValidator = subscriptionDescRefersTo.Validators[0].(func(string) error)
	// subscriptionDescCreateTime is the schema descriptor for create_time field.
	subscriptionDescCreateTime := subscriptionFields[4].Descriptor()
	// subscription.DefaultCreateTime holds the default value on creation for the create_time field.
	subscription.DefaultCreateTime = subscriptionDescCreateTime.Default.(func() time.Time)
	// subscriptionDescUpdateTime is the schema descriptor for update_time field.
	subscriptionDescUpdateTime := subscriptionFields[5].Descriptor()
	// subscription.DefaultUpdateTime holds the default value on creation for the update_time field.
	subscription.DefaultUpdateTime = subscriptionDescUpdateTime.Default.(func() time.Time)
	// subscription.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	subscription.UpdateDefaultUpdateTime = subscriptionDescUpdateTime.UpdateDefault.(func() time.Time)
	// subscriptionDescID is the schema descriptor for id field.
	subscriptionDescID := subscriptionFields[0].Descriptor()
	// subscription.DefaultID holds the default value on creation for the id field.
	subscription.DefaultID = subscriptionDescID.Default.(func() uuid.UUID)
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescID is the schema descriptor for id field.
	tagDescID := tagFields[0].Descriptor()
	// tag.DefaultID holds the default value on creation for the id field.
	tag.DefaultID = tagDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[2].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescAdmin is the schema descriptor for admin field.
	userDescAdmin := userFields[4].Descriptor()
	// user.DefaultAdmin holds the default value on creation for the admin field.
	user.DefaultAdmin = userDescAdmin.Default.(bool)
	// userDescCreatedAt is the schema descriptor for createdAt field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the createdAt field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updatedAt field.
	userDescUpdatedAt := userFields[6].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
